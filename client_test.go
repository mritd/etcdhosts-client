package etcdhosts_client

import (
	"testing"
)

var (
	testCA = `LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZyakNDQTVhZ0F3SUJBZ0lVRTZvWTV4c2Zl
b2U4TjNQVGNJdEU2c2p3RUxFd0RRWUpLb1pJaHZjTkFRRU4KQlFBd2J6RUxNQWtHQTFVRUJoTUNR
MDR4RURBT0JnTlZCQWdUQjBKbGFXcHBibWN4RURBT0JnTlZCQWNUQjBKbAphV3BwYm1jeERUQUxC
Z05WQkFvVEJHVjBZMlF4RmpBVUJnTlZCQXNURFdWMFkyUWdVMlZqZFhKcGRIa3hGVEFUCkJnTlZC
QU1UREdWMFkyUXRjbTl2ZEMxallUQWVGdzB5TURFd01qQXdNalEyTURCYUZ3MHpNREV3TVRnd01q
UTIKTURCYU1HOHhDekFKQmdOVkJBWVRBa05PTVJBd0RnWURWUVFJRXdkQ1pXbHFhVzVuTVJBd0Rn
WURWUVFIRXdkQwpaV2xxYVc1bk1RMHdDd1lEVlFRS0V3UmxkR05rTVJZd0ZBWURWUVFMRXcxbGRH
TmtJRk5sWTNWeWFYUjVNUlV3CkV3WURWUVFERXd4bGRHTmtMWEp2YjNRdFkyRXdnZ0lpTUEwR0NT
cUdTSWIzRFFFQkFRVUFBNElDRHdBd2dnSUsKQW9JQ0FRRGZsYjFNMmZSbW4vN1M1aFF4VzhRN2Nv
RWNrYnlWNTV6VzJIQ0ViUkliSENLMExjL3oyVjNKYlNSYgpMaitEaWszckJ4RmRmNklhbFZqcFpN
MEFZRVFlVWw5b1c5WGtlbjFhcWlBTWdJczFOQitwd091M0gyZGVZMUFDCk1mMzc5VnVWc1dUTkFC
OWpiMTE1elVPdG1SVm5oZFppSXhOK25DVHl0QS9TNjdoUmlyNGFyaXRKUEtBWnB5bUwKaEJDTnNE
RFdyTEt6NG5wNTFEY3orYVZQeUVnd0pWcUpxWXVBKzdKeXkrS01mVFEwajRnWTc0SDQ2WElDa3FD
OApnTTBUNENTbE5lYjFrZC9hR3FLNHpqZlNlMXUxT2g1Q1BOUkxEMnVURFdDeVlJa21kbGNtWVQ1
UlJCdU15clF2CmwrY3AxU2V0WnF5WnBhQTN2QmMweGprK1VOSmdKZk9WZGpnSGZya1NuMG5TWitN
Y2xJVjNkV041MVp5cGxrRm8KeFFlYUhnYVZZSDc5OWljd3VSMC83cElLYld2WnhZelp1NlNNZGFD
UUYxbEZMSnBUVUZqQmY2L2phRTk4cm1Udgp5VzB2RGhlMnN2aHJHank0aGIvaXlPUlEvSm9sR2ZK
eFUrbHgyaW8xU2VXNHVWYzRFZ0RpNGtCUFVtaXdVemVYCjMwMFo4S0ErNmd2RU1aSlMwZHdONTVD
N2xXL2JCMEVoeXJYa2E5c1BEZUlCOWM5SjJiQi9xWGtKTUFqS0t0SHQKVVkybFowanV3MklNTGJT
YkkwdVNoQ0psU2tVVGpKMVZ1dnA0QWYrbGFlRHlWZ2xKKzVhN1JYQ1BScXZwSCtrTgowSFZuayta
VHc5OThCenB5ZlhuU2plUUM3bEJUajdyS0g5T2FobGx3bVFNT2x6Mnd6d0lEQVFBQm8wSXdRREFP
CkJnTlZIUThCQWY4RUJBTUNBUVl3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FV
c2RzdHdaeGQKK0R6WVE1SjYwTGwySW51M0M3SXdEUVlKS29aSWh2Y05BUUVOQlFBRGdnSUJBS2s0
Y2Y5NENFMGhGOS9WVWNwRgpOT2JKd25hVHZaTFJtVXByYUlQRkVHY3JEazZCOWlPdzVhelFheFRK
TWF6cG1wWkplTUFpVnVOc0xKREtXY0Z0CjhvVUd3eHo3SGFpRTJoY0hSS0tTZUM0UmVHMlQ2bWVv
aFhQcHJiRjhheHZXWlBpSGdJRWpMUVVpM29aQjdzZS8KVjhVV3MydWhVT1VPWE1WakZiaGlGOWY5
cUFxL2llRzZzUy9IWEhFdGxzRWxmeUdpUzAzZ1g3a2x6dGZsTkViawp5VkhzTk1FbzFlQ1pvS2sr
VWk0MVgwcUhCSmh6V2JYMzRTODZpY0pMK1B1TWlOVk1zQlU2MlJyVG1CcDBRbTd6CmlYYjJlSlRh
RmdUMThxQS84MTRoNW1zaDBacDdTendCUzdGdXF4dTgxVVVoUS9KQjNHM2pxZ2IwclVmbVJ0UjYK
Yy9mQ1JNNHVuZjFjaXJ3QWdPTmovTThLZVdnWkZkdXBjcTN1QU95bSthcXlnUlJpdllBd2R2Z01a
ZkQvaGVuSgo3TkZWYmlSL0hENUlCWE5kbXRGQ3FmYVNSdEJlckIzWVNwb1JFMGFmWXd0ZGsrWWEv
dzVKSk95OG00aEwwbGs5ClQyV3Y1bmZDeGlRMEpOL0ZOQk1RU0E2b08zdEE0YStlR1VBVk5KUkxD
bFE1bWc1dldxN1I4dlV6SnNTUTNuZ1YKaDRDcjI4c3R2amRMalM2SjhLbG1YdkxQRk5YMXNtbXk0
L0FEYTdHU0xQU2x2UXRjVElYU04wdHB4dUNKeGxJWQo1TS9KbDgrMlRvWGx2ZmtvYWhkQzk3VFRT
UnhiMVkxVUYwMjhNZE53L3lTYVVCRzVaVVBGNmRZZ2MrWnBZbjh2ClkvR2lHK2tTLzhYbHpicUFV
TS9HSEJMWAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
`
	testCert = `LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZNekNDQXh1Z0F3SUJBZ0lVUjZuZlBRdG8z
bTVDU0RQdk94OHdXNGZmUHEwd0RRWUpLb1pJaHZjTkFRRU4KQlFBd2J6RUxNQWtHQTFVRUJoTUNR
MDR4RURBT0JnTlZCQWdUQjBKbGFXcHBibWN4RURBT0JnTlZCQWNUQjBKbAphV3BwYm1jeERUQUxC
Z05WQkFvVEJHVjBZMlF4RmpBVUJnTlZCQXNURFdWMFkyUWdVMlZqZFhKcGRIa3hGVEFUCkJnTlZC
QU1UREdWMFkyUXRjbTl2ZEMxallUQWVGdzB5TURFd01qQXdNalEyTURCYUZ3MHpNREV3TVRnd01q
UTIKTURCYU1HY3hDekFKQmdOVkJBWVRBa05PTVJBd0RnWURWUVFJRXdkQ1pXbHFhVzVuTVJBd0Rn
WURWUVFIRXdkQwpaV2xxYVc1bk1RMHdDd1lEVlFRS0V3UmxkR05rTVJZd0ZBWURWUVFMRXcxbGRH
TmtJRk5sWTNWeWFYUjVNUTB3CkN3WURWUVFERXdSbGRHTmtNSUlCSWpBTkJna3Foa2lHOXcwQkFR
RUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVVejgKZ3cvRy9rRGYvUG9Qc3hFL2N1L2YvVHdUc3ZHMkpH
YmgvdzFBOEZianI1SURDb0hmbDZMVnQrOUtvclYyYTNoOQpJTEI1ZjQ2b2tycUw4N3RGc2sveDIx
eU5XM0IzNjRsY1VacVZXYitwUGxNNHBuQmVZQjl4cGhhMWRERTJrR0FJCmxkZXAvSHhBMG5MRTUx
MU1uU0lrZjNSbWxaSytMWGUrbjQxSVJoWVk3UDl1eFdRUHFPMU8zNjJkTStmOXE1NDYKT0o3QzVQ
R3hxVDlXejBOU0RheGZNaFVpbHpSeHhRR1F3MHJkL0FXaTVGN2NUVUVwbnF6Y1RZUFduRzZhQXRy
bApCMlU5SFU2RVp2VmxYbzl6UVZaNHVLZmtmbHdDTVJzZE5mU09YeWh4MjNrMTBGbzJLN1RweUFC
TG00OG01M1BmCkoyUnk2VGd4VVZHR0FKZ24xd0lEQVFBQm80SE9NSUhMTUE0R0ExVWREd0VCL3dR
RUF3SUZvREFkQmdOVkhTVUUKRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIw
VEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVQptd0ZaWHFpTmdJeUFWdWZPTThZNTFoQ1NqTjB3SHdZ
RFZSMGpCQmd3Rm9BVXNkc3R3WnhkK0R6WVE1SjYwTGwyCkludTNDN0l3VEFZRFZSMFJCRVV3UTRJ
SmJHOWpZV3hvYjNOMGdnc3FMbVYwWTJRdWJtOWtaWUlSS2k1cmRXSmwKY201bGRHVnpMbTV2WkdX
SEJIOEFBQUdIQkt3UUN4K0hCS3dRQ3lDSEJLd1FDeUV3RFFZSktvWklodmNOQVFFTgpCUUFEZ2dJ
QkFJNFBGTVJ1SzBHaGtjTW5YbmMyaGUrODhaQ0lYbVY5Tlp0cnFKSmwzNUw3Zk9GcjV0Q2MzUThj
ClRoRmVzWDEvajZZaVdnZ2dQanFveWUrbmRJUXZUL0ttTWtXS1FnQ3NKbnNtYlJqdmdQcjRQWjFB
SE44NFVVeEgKNHltQTVvYzFacWdqYklRVUJIazVCaytpZDFlZHpFdDZwZHl2M1NGUTdpU091QXAw
Zld1N2R0TS81UC80bHRLQwp3dWRTbzBtZHM0dDQrZXNsaG1wU3ZTU0wrS3FtTGcrSVhoOEVXZzQr
c3pKSGNwc2VJaWpaSy9KU1RUUGFtNUVlCmtodExzSVVicjNuU29IZU0zQXloT3N4SFF0a0VhSHFW
d2owTHdpa3lKYjVaK2FOWDRReFN5Y0FhQUJ4SWxuYmgKU0h4YjQxMXVmeXdrM3BPaFM4RTh2QU5D
aTdYWUxaOXNxbnBCNnBDcWIwbDlqbUVKN1BPUCtJNDNIRWo0U0NabQpLS2NwOXZTNFVWYVV3YUlP
RE9iQ21HUkU4eEw1cjZIRUQ4eGM5dHJKUW5GcHhIWDJYTkxlbkVOcjk3dXdLc2VECjBqNU5xZm81
YjRjRmt6ZksrWlRYL0ZLZFN5bzFNNmNXa0FHcHU2R1lNYlVadG9Qb0xwUnE1ZGVzMmluOWc1UEwK
YUx3dGZFSlpuQzBXWThyeFFHNUd2NTVXSzZ3VkM0NWJHbk9uTW5UN2dFb0xFWXJmSS9qQVdFRDAy
YmdRZmtVWQp5R212MUJiSGFrd3k4a3lWR2htRGtBVHY1eFZ1US9idCtXbzAwcCs2Mms5S2NVaFZH
cFByRXRUaElqci83SHh6CmI3SVJVNXg2d1ZPQTFjdVZNUkRwc3VuTWFWKzJvVElGMEFSbExleU5C
LzR6ZGVCY01RMEcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
`
	testKey = `LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdVV6OGd3L0cv
a0RmL1BvUHN4RS9jdS9mL1R3VHN2RzJKR2JoL3cxQThGYmpyNUlECkNvSGZsNkxWdCs5S29yVjJh
M2g5SUxCNWY0Nm9rcnFMODd0RnNrL3gyMXlOVzNCMzY0bGNVWnFWV2IrcFBsTTQKcG5CZVlCOXhw
aGExZERFMmtHQUlsZGVwL0h4QTBuTEU1MTFNblNJa2YzUm1sWksrTFhlK240MUlSaFlZN1A5dQp4
V1FQcU8xTzM2MmRNK2Y5cTU0Nk9KN0M1UEd4cVQ5V3owTlNEYXhmTWhVaWx6Unh4UUdRdzByZC9B
V2k1RjdjClRVRXBucXpjVFlQV25HNmFBdHJsQjJVOUhVNkVadlZsWG85elFWWjR1S2ZrZmx3Q01S
c2ROZlNPWHloeDIzazEKMEZvMks3VHB5QUJMbTQ4bTUzUGZKMlJ5NlRneFVWR0dBSmduMXdJREFR
QUJBb0lCQVFDNU9MZ3J0Y2llZTNDcAo2YmRwc2ZMdlM5Rmt5dm1SNUVUQjdFazQ3aUdjVys0cG9G
VUQyc0FLVGMwOWw2Yk9MMzhZZkE3dmJ4ZHpwc0RnCk1qSVV4bndyZWZmeTRuZTJFQnoreG9ZT1Yr
dTBFMzN6KzdIanhPekJQbzBXalJxQjgzTnNLMkpKalpLdisrKzcKck5jZndjWUVSNDJlRFZkQmFi
WkpzcWxMeVNpV1RHcWZRREMxSWQrS0RTZytSamNaNkVMbFNVdWFFS2crY0t3KwpTQkhlb21ET0tk
WkpBTm5FZ2VBZHorY01YT2xoWWdYZ2wrSmVRb2dJZXdpQmZPaTNKQWJ2M0RWRGVyM3d1T3llCmdO
R1JKRnJaSkdCdUQrak85WWNnKzRuMjRTMmF0aHR1ekRqczVtbWJiQ3hKVzhhRW12bkc1RFJDemxj
K2dSN2oKZjFQYjhRTWhBb0dCQU9GYjIvWGxWdU9zbWRBblJnb0ErSm9MWEFodmtOS2R2NEVDOTFa
SXY3d3l2aTlKZks1KwpZeHgvQkEvc3NVbXV3RFRjVWxQd3Z0ckNoMFJjSGlKaUJsTFZjNnNBU2hh
Qno5S0tOMmpoY21oZ0hObGQza3ZuCkJIT1ArZkRCVkpBVTA1dkV2U0p3Mk1mYnFyV3U5SHNxZ3BM
QjczUnlOQ0FVNnFSWTNteG02ZlZ4QW9HQkFOSisKejdvVm16MU1Pam5Dc3pQTXdEL1o4Qlk4eWVM
S3JTUHUvRnRsWk5nc1lpS3dYR0w5cDlORmwzRTJyOERscmhuUApqTS90NmI1NTZDcDZWTHM4R0xh
MVIybU1ialR5aXdMUjJtWnFVeU9ZVmJXK3RjdWgyMVJ3ZTJBRnBTVlpqN3NuCi9UMkYxQ0tITmo0
SWtBT0NEZURtdnRDMjcrZjhNR1NBa0QxUkxhM0hBb0dCQU1rTzBYSFN5UENiZnljc3d0b04KLzc0
L3dENXVld0ROYUp2TGI2djFmOHFDWXhlQk10SGpSTDJadktBUWhpTzgyeExPTmsxWmpvMVIzS2px
bnFBQwpZSzNxYmlYMFBpVlNiMzNoZm9uK0NicUJkWHVndWNGeVBKQjF0WUpNbWd0cDZWa2g3N1FZ
aGUvWlZiWitmdlNiCitwN0FrOGlLVTJNRUJrdldWYXJWTG9xaEFvR0FQNUFIamp1a0N4aVBwSTJF
cTZteWpCVjFpR0dHM1RNeW9WMHoKV3kzOUM4SXJTQ3BWVzVjWkxKVWhMQkRGZGN4bGpHbStMYk84
RjhhY011ZUoycGhGSmpjTGYzWG1lWnFjRzVmZgpDWG9sN09POVRncHV2elQ3RkQ1N0l2M1JacnZx
eVN0RUwyWFFMelVCVGk0cnZzTnhDVzdrUkFaWjM0V3AzMDlyClB2amFnRlVDZ1lCZTMvcmM2UEZY
R21MOUN0WXlTQXlLcjY0c0J1U0pzQlVESnVZNVpvZVZnVmF6WlFLSDZITFoKR3BTdWtMYk5HSjFy
UmZzaEdqQTBNek5PeCt5anh4bXhUY3ZKS29GZkIxdEIvelJkK0xJYi85RDRFVEtDb1h5VApDYXVh
eE9hc3ZzSWczdlBpSkRobll0RW05WDlpelU4UW44VU1POWw2azlTMEhBUTRmckZlUnc9PQotLS0t
LUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
`
	testEndpoints = []string{"https://172.16.11.31:2379"}

	testHostkey = "/test_host_key"
)

func TestHostsClient_NewClient(t *testing.T) {
	_, err := NewClient(testCA, testCert, testKey, testEndpoints, testHostkey)
	if err != nil {
		t.Fatal(err)
	}
}

func TestNewHostFile(t *testing.T) {
	_, err := NewHostFile([]byte(DefaultLinux))
	if err != nil {
		t.Fatal(err)
	}
}

func TestHostsClient_PutHosts(t *testing.T) {
	hostFile, err := NewHostFile([]byte(DefaultLinux))
	if err != nil {
		t.Fatal(err)
	}
	cli, err := NewClient(testCA, testCert, testKey, testEndpoints, testHostkey)
	if err != nil {
		t.Fatal(err)
	}

	err = cli.PutHosts(hostFile)
	if err != nil {
		t.Fatal(err)
	}
}

func TestHostsClient_GetHosts(t *testing.T) {
	cli, err := NewClient(testCA, testCert, testKey, testEndpoints, testHostkey)
	if err != nil {
		t.Fatal(err)
	}
	_, err = cli.GetHosts()
	if err != nil {
		t.Fatal(err)
	}
}

func TestHostList_ContainsDomain(t *testing.T) {
	hostFile, err := NewHostFile([]byte(`1.1.1.1 baidu.com`))
	if err != nil {
		t.Fatal(err)
	}
	ok := hostFile.Hosts.ContainsDomain("baidu.com")
	if !ok {
		t.Fatal("ContainsDomain test failed")
	}
}

func TestNewHostname(t *testing.T) {
	_, err := NewHostname("baidu.com", "1.1.1.1", true)
	if err != nil {
		t.Fatal("NewHostname test filed")
	}
}

func TestHostList_Add(t *testing.T) {
	hostFile, err := NewHostFile([]byte(DefaultLinux))
	if err != nil {
		t.Fatal(err)
	}
	hostName, err := NewHostname("baidu.com", "1.1.1.1", true)
	if err != nil {
		t.Fatal(err)
	}
	err = hostFile.Hosts.Add(hostName)
	if err != nil {
		t.Fatal(err)
	}
	ok := hostFile.Hosts.ContainsDomain("baidu.com")
	if !ok {
		t.Fatal("HostList_Add test failed")
	}
}

func TestHostList_RemoveDomain(t *testing.T) {
	hostFile, err := NewHostFile([]byte(`1.1.1.1 baidu.com`))
	if err != nil {
		t.Fatal(err)
	}
	i := hostFile.Hosts.RemoveDomain("baidu.com")
	if i < 1 {
		t.Fatal("HostList_RemoveDomain test filed")
	}
	ok := hostFile.Hosts.ContainsDomain("baidu.com")
	if ok {
		t.Fatal("HostList_RemoveDomain test failed")
	}
}
